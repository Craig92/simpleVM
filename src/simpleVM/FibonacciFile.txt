LOAD #1000
MOV R15 , R0		//R15 ZEIGER auf Speicheradresse
LOAD #1
MOV R2 , R0			//R2 Variable N
LOAD #1
MOV R14 , R0		//R14 KONSTANTE 1
LOAD #21
MOV R13 , R0		//R13 Gesuchte FIBONACCIZAHL
NOP
JSR #16				//Springt zur FIBONACCI FUNKTION
ADD R15 , R14		//Erhöht den ZEIGER auf Speicheradresse
ADD R2 , R14		//Erhöht die Variable N um eins
MOV R0 , R2			
SUB R0 , R13		//Verringert die Variable N um die gesuchte FUBONACCIZAHL
JIZ #45				//Springt zum PROGRAMMENDE.
JMP #8				//Wiederholt die Schleife
NOP					//FIBONACCI FUNKTION
PUSH R0				//Speichert die Register R0, R1 und R2 im Registerstack
PUSH R1				
PUSH R2
MOV R0 , R2			
JIZ #40				//Springt zu ABBRUCHBEDINGUNG N=0
SUB R0 , R14
JIZ #32				//Springt zu ABBRUCHBEDINGUNG N=1
SUB R2 , R14		//Verringert Variable N um eins
JSR #16
SUB R2 , R14
JSR #16
POP R2				//Läd die gespeicherten Register zurück
POP R1
POP R0
RTS
NOP					//ABBRUCHBEDINGUNG N=1
MOV R0 , (R15)		
ADD R0 , R14		//Erhöht den ZEIGER auf die Speicheradresse um eins
MOV (R15) , R0
POP R2				//Läd die gespeicherten register zurück
POP R1
POP R0
RTS
NOP					//ABBRUCHBEDINGUNG N=0
POP R2				//Läd die gespeicherten Register zurück.
POP R1
POP R0
RTS					
NOP					//PROGRAMMENDE
RTS			